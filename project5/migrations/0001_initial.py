# Generated by Django 5.2 on 2025-08-10 11:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="HumanFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("trajectory_a_id", models.CharField(max_length=50)),
                ("trajectory_b_id", models.CharField(max_length=50)),
                (
                    "preferred_trajectory",
                    models.CharField(
                        choices=[("A", "Trajectory A"), ("B", "Trajectory B")],
                        max_length=1,
                    ),
                ),
                ("feedback_reason", models.TextField(blank=True)),
                (
                    "confidence_level",
                    models.IntegerField(
                        default=3, help_text="1-5 scale, how confident are you?"
                    ),
                ),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-submitted_at"],
            },
        ),
        migrations.CreateModel(
            name="PolicyModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.CharField(max_length=20, unique=True)),
                ("model_data", models.BinaryField()),
                (
                    "training_type",
                    models.CharField(
                        choices=[
                            ("baseline", "Baseline REINFORCE"),
                            ("rlhf", "RLHF Trained"),
                        ],
                        default="baseline",
                        max_length=10,
                    ),
                ),
                ("training_episodes", models.IntegerField()),
                ("average_reward", models.FloatField()),
                ("final_loss", models.FloatField(blank=True, null=True)),
                ("hyperparameters", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Trajectory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("trajectory_id", models.CharField(max_length=50, unique=True)),
                ("total_reward", models.FloatField()),
                ("total_steps", models.IntegerField()),
                ("cheese_collected", models.IntegerField(default=0)),
                ("organic_cheese_collected", models.IntegerField(default=0)),
                ("traps_hit", models.IntegerField(default=0)),
                ("episode_ended", models.BooleanField(default=False)),
                ("end_reason", models.CharField(blank=True, max_length=50)),
                ("policy_version", models.CharField(default="v1", max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Trajectories",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="GameState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("grid_state", models.TextField()),
                ("mouse_position", models.CharField(max_length=10)),
                ("reward", models.FloatField(default=0.0)),
                ("step_number", models.IntegerField(default=0)),
                ("trajectory_id", models.CharField(max_length=50)),
                ("action_taken", models.CharField(blank=True, max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["trajectory_id", "step_number"],
                "indexes": [
                    models.Index(
                        fields=["trajectory_id", "step_number"],
                        name="project5_ga_traject_d6b7a4_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="TrainingSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(max_length=50, unique=True)),
                (
                    "training_type",
                    models.CharField(
                        choices=[
                            ("baseline", "Baseline REINFORCE"),
                            ("rlhf", "RLHF Trained"),
                        ],
                        max_length=10,
                    ),
                ),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("episodes_completed", models.IntegerField(default=0)),
                ("target_episodes", models.IntegerField()),
                ("current_average_reward", models.FloatField(default=0.0)),
                ("is_completed", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                (
                    "resulting_policy",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="project5.policymodel",
                    ),
                ),
            ],
            options={
                "ordering": ["-start_time"],
            },
        ),
    ]
